# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Java Deploy
author: bissim
description: "Publish project package over Nexus repository index"

branding:
  icon: 'package'
  color: 'orange'

on:
  release:
    types: [created]
    inputs:
      java-version:
        description: "JDK version to use"
        required: true
        default: '11'

env:
  GITHUB_TOKEN: ${{ github.token }}
  WS: ${{ github.workspace }}

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up GitHub Packages
      uses: actions/setup-java@v1
      with:
        java-version: ${{ github.event.inputs.java-version }}
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: ${{ github.actor }} # env variable for username in deploy
        server-password: ${{ github.token }} # env variable for token in deploy
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }} # env variable for GPG private key passphrase
        settings-path: ${{ github.workspace }}/java

    - name: Publish GitHub Packages Apache Maven
      continue-on-error: true
      run: mvn -B -T $(nproc) verify deploy -s $WS/java/settings.xml -f $WS/java/pom.xml

    - name: Set up Maven cache
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up Apache Maven Central
      uses: actions/setup-java@v1
      with: # running setup-java again overwrites the settings.xml
        java-version: ${{ github.event.inputs.java-version }}
        server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: ${{ secrets.OSSRH_USERNAME }} # env variable for username in deploy
        server-password: ${{ secrets.OSSRH_PASSWORD }} # env variable for token in deploy
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }} # env variable for GPG private key passphrase
        settings-path: ${{ github.workspace }}/java

    - name: Publish to Apache Maven Central
      continue-on-error: true
      run: mvn -B -T $(nproc) verify deploy -s $WS/java/settings.xml -f $WS/java/pom.xml

    - name: Get latest FLY Graph release
      id: get_release
      uses: bruceadams/get-release@v1.2.0

    - name: Upload JAR with dependencies as Release Asset
      id: upload-jar-with-deps-as-release-asset
      uses: actions/upload-release-asset@latest
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./java/target/fly-graph-${{ github.event.release.tag_name }}-jar-with-dependencies-and-exclude-files.jar
        asset_name: fly-graph-${{ github.event.release.tag_name }}-jar-with-dependencies-and-exclude-files.jar
        asset_content_type: application/java-archive

    - name: Upload JAR as Release Asset
      id: upload-jar-release-asset
      uses: actions/upload-release-asset@latest
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./java/target/fly-graph-${{ github.event.release.tag_name }}-lib.jar
        asset_name: fly-graph-${{ github.event.release.tag_name }}-lib.jar
        asset_content_type: application/java-archive

    - name: Upload Javadoc as Release Asset
      id: upload-javadoc-as-release-asset
      uses: actions/upload-release-asset@latest
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./java/target/fly-graph-${{ github.event.release.tag_name }}-javadoc.jar
        asset_name: fly-graph-${{ github.event.release.tag_name }}-javadoc.jar
        asset_content_type: application/java-archive
