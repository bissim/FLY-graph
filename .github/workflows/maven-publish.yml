# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Java Deploy

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.x
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file java/pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -Dtoken=${GITHUB_TOKEN} --file java/pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get latest FLY Graph release
      id: get_release
      uses: bruceadams/get-release@v1.2.0

    - name: Upload JAR with dependencies as Release Asset
      id: upload-jar-with-deps-as-release-asset 
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./java/target/fly-graph-${{ github.ref }}-jar-with-dependencies-and-exclude-files.jar
        asset_name: fly-graph-${{ github.ref }}-jar-with-dependencies-and-exclude-files.jar
        asset_content_type: application/java-archive

    - name: Upload JAR as Release Asset
      id: upload-jar-release-asset 
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./java/target/fly-graph-${{ github.ref }}-lib.jar
        asset_name: fly-graph-${{ github.ref }}-lib.jar
        asset_content_type: application/java-archive

    - name: Upload Javadoc as Release Asset
      id: upload-javadoc-as-release-asset 
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./java/target/fly-graph-${{ github.ref }}-javadoc.jar
        asset_name: fly-graph-${{ github.ref }}-javadoc.jar
        asset_content_type: application/java-archive
